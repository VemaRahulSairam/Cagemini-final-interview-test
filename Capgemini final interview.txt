Capgemini Final Interview Test

VEMA RAHUL SAIRAM
ID: CAPG48LSRB330


01. What is difference in Overloading and Over riding
Ans When two or more methods in the same class have the same name but different parameters, it’s called Overloading.
    When the method signature (name and parameters) are the same in the superclass and the child class, it’s called Overriding.


02. If both the functions are statis can we over ride
Ans No, we cannot override static methods because method overriding is based on dynamic binding at runtime and the static 
    methods are bonded using static binding at compile time. So, we cannot override static methods.

03. Diffference between Final , Finally and Finalize
Ans In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time. 
    After the first time, if we try to instantiate the Singleton class, the new variable also points to the first instance created. 
    So whatever modifications we do to any variable inside the class through any instance, affects the variable of the single 
    instance created and is visible if we access that variable through any variable of that class type defined.


04. What are maker Interfaces
Ans It is an empty interface (no field or methods). Examples of marker interface are Serializable, Cloneable and Remote interface. 
    All these interfaces are empty interfaces. 
    1.Cloneable interface
    2.Serializable interface
    3.Remote interface


05. What is Singleton class
Ans In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time. 
    After the first time, if we try to instantiate the Singleton class, the new variable also points to the first instance created. 
    So whatever modifications we do to any variable inside the class through any instance, affects the variable of the single instance 
    created and is visible if we access that variable through any variable of that class type defined.


06. What is the underlying Data structure for Arraylist and Linkedlist
Ans Both ArrayList and LinkedList are two different implementations of the List interface. ArrayList is a 
    resizable-array implementation, whereas LinkedList is a Doubly-linked list implementation of the List interface.  
    ArrayList is a resizable array implementation in java. The backing data structure of ArrayList is an array of Object 
    class.Like arrays, Linked List is a linear data structure.


07. What is hash collitition
Ans A collision, or more specifically, a hash code collision in a HashMap, is a situation where two or more key objects 
    produce the same final hash value and hence point to the same bucket location or array index.


08. What are lambda Expressions
Ans A lambda expression is a short block of code which takes in parameters and returns a value. Lambda expressions are 
    similar to methods, but they do not need a name and they can be implemented right in the body of a method.


09. Whats is functional interface
Ans A functional interface is an interface that contains only one abstract method. They can have only one functionality 
    to exhibit. From Java 8 onwards, lambda expressions can be used to represent the instance of a functional interface. 
    A functional interface can have any number of default methods.


10. What are optional classes in Java 8
Ans Optional is a container object used to contain not-null objects. Optional object is used to represent null with absent value. 
    This class has various utility methods to facilitate code to handle values as ‘available’ or ‘not available’ instead of checking null values. 


11. Whats is factory design pattern and Adapter and difference bew them
Ans A Factory Pattern or Factory Method Pattern says that just define an interface or abstract class for creating an object but let the 
    subclasses decide which class to instantiate. In other words, subclasses are responsible to create the instance of the class.Abstract 
    Factory Pattern says that just define an interface or abstract class for creating families of related (or dependent) objects but without 
    specifying their concrete sub-classes.That means Abstract Factory lets a class returns a factory of classes. So, this is the reason that 
    Abstract Factory Pattern is one level higher than the Factory Pattern.


12. What are Solid principles
Ans SOLID principles are object-oriented design concepts relevant to software development. SOLID is an acronym for five other class-design 
    principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle, 
    and Dependency Inversion Principle.



13. What does @component and @scan do in Sprinboot annaotation
Ans @Component is an annotation that allows Spring to automatically detect our custom beans. In other words, without having 
    to write any explicit code, Spring will: Scan our application for classes annotated with @Component. Instantiate them and 
    inject any specified dependencies into them.Spring provides a mechanism to identify Spring bean candidates explicitly through 
    the @ComponentScan annotation. If the application is a Spring Boot application, then all the packages under the package containing 
    the Spring Boot application class will be covered by an implicit component scan.


14. Whats is the Diference bew JPA , Hibernate and ORM
Ans Java Persistence API (JPA) defines the management of relational data in the Java applications. Hibernate is an Object-Relational 
    Mapping (ORM) tool which is used to save the state of Java object into the database. It is just a specification. 
    Various ORM tools implement it for data persistence.


15. What is indexing in Database
Ans Indexing is a way to optimize the performance of a database by minimizing the number of disk accesses required when a query is processed. 
    It is a data structure technique which is used to quickly locate and access the data in a database. Indexes are created using a few database columns.


16. What are 4 types of Drivers in Jdbc
Ans There are 4 types of JDBC drivers:
    JDBC-ODBC bridge driver
    Native-API driver
    Network Protocol driver
    Thin driver


17. What is difrence bew @component and @bean and @service
Ans The difference is that @Bean is applicable to methods, whereas @Component is applicable to types. 
    @Component is a generic stereotype for any Spring-managed component. @Service annotates classes at the service layer.


18. What is difference bew SOAP and restful services techinically
Ans The main difference is that SOAP is a protocol while REST is not. Typically, an API will adhere to either REST or SOAP, 
    depending on the use case and preferences of the developer.


19. Difference in POST and PUT
Ans The difference between POST and PUT is that PUT requests are idempotent. That is, calling the same PUT request multiple 
    times will always produce the same result. In contrast, calling a POST request repeatedly have side effects of creating 
    the same resource multiple times.


20. is react uni directional or Bi directional
Ans React, a Javascript library, uses unidirectional data flow. The data from the parent is known as props. You can only transfer 
    data from parent to child and not vice versa. This means that the child components cannot update or modify the data on their 
    own, makeing sure that a clean data flow architecture is followed.




